<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.6" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <NonVisualComponents>
    <Component class="javax.swing.JFileChooser" name="jFileChooser_LoadModels">
      <Properties>
        <Property name="dialogTitle" type="java.lang.String" value="Load Model File" postCode="java.io.File modDirectory = new File(&quot;./assets/models&quot;);&#xa;jFileChooser_LoadModels.setCurrentDirectory(modDirectory);"/>
        <Property name="doubleBuffered" type="boolean" value="true"/>
        <Property name="dragEnabled" type="boolean" value="true"/>
      </Properties>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodePre" type="java.lang.String" value="FileFilter modelFilter = new FileFilter() {&#xa;    @Override&#xa;    public boolean accept(File f) {&#xa;        if(f.isDirectory()) {&#xa;            return true;&#xa;        }&#xa;        &#xa;        if (f.getName().toLowerCase().endsWith(&quot;.ms3d&quot;) || f.getName().toLowerCase().endsWith(&quot;.dae&quot;)) {&#xa;            return true;&#xa;        }&#xa;        return false;&#xa;    }&#xa;&#xa;    @Override&#xa;    public String getDescription() {&#xa;        String szDescription = new String(&quot;Models (*.ms3d, *.dae)&quot;);&#xa;        return szDescription;&#xa;    }&#xa;};"/>
        <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jFileChooser_LoadModels.addChoosableFileFilter(((FileFilter)modelFilter));"/>
      </AuxValues>
    </Component>
    <Component class="javax.swing.JFileChooser" name="jFileChooser_LoadAssets">
      <Properties>
        <Property name="dialogTitle" type="java.lang.String" value="Load Texture File"/>
      </Properties>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodePre" type="java.lang.String" value="FileFilter assetFilter = new FileFilter() {&#xa;    @Override&#xa;    public boolean accept(File f) {&#xa;        if(f.isDirectory()) {&#xa;            return true;&#xa;        }&#xa;        &#xa;        if (f.getName().toLowerCase().endsWith(&quot;.jpg&quot;) ||&#xa;            f.getName().toLowerCase().endsWith(&quot;.png&quot;) ||&#xa;            f.getName().toLowerCase().endsWith(&quot;.gif&quot;) ||&#xa;            f.getName().toLowerCase().endsWith(&quot;.tga&quot;)) {&#xa;            return true;&#xa;        }&#xa;        return false;&#xa;    }&#xa;&#xa;    @Override&#xa;    public String getDescription() {&#xa;        String szDescription = new String(&quot;Images (*.jpg, *.png, *.gif, *.tga)&quot;);&#xa;        return szDescription;&#xa;    }&#xa;};"/>
        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="jFileChooser_LoadAssets.setName(&quot;Load Texture File&quot;);&#xa;jFileChooser_LoadAssets.addChoosableFileFilter(((FileFilter)assetFilter));&#xa;java.io.File assetDirectory = new File(&quot;./assets/textures&quot;);&#xa;jFileChooser_LoadAssets.setCurrentDirectory(assetDirectory);"/>
      </AuxValues>
    </Component>
    <Component class="javax.swing.JFileChooser" name="jFileChooser_LoadXML">
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodePre" type="java.lang.String" value="FileFilter xmlFilter = new FileFilter() {&#xa;    @Override&#xa;    public boolean accept(File f) {&#xa;        if(f.isDirectory()) {&#xa;            return true;&#xa;        }&#xa;&#xa;        if (f.getName().toLowerCase().endsWith(&quot;.xml&quot;)) {&#xa;            return true;&#xa;        }&#xa;        return false;&#xa;    }&#xa;&#xa;    public String getDescription() {&#xa;        String szDescription = new String(&quot;Extensible Markup Language File (*.xml)&quot;);&#xa;        return szDescription;&#xa;    }&#xa;};"/>
        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="jFileChooser_LoadXML.addChoosableFileFilter(((FileFilter)xmlFilter));&#xa;java.io.File configDirectory = new File(&quot;./assets/configurations/&quot;);&#xa;jFileChooser_LoadXML.setCurrentDirectory(configDirectory);&#xa;jFileChooser_LoadXML.setDialogTitle(&quot;Load XML File&quot;);"/>
      </AuxValues>
    </Component>
    <Component class="javax.swing.JFileChooser" name="jFileChooser_SaveXML">
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodePre" type="java.lang.String" value="FileFilter xmlFilterS = new FileFilter() {&#xa;    @Override&#xa;    public boolean accept(File f) {&#xa;        if(f.isDirectory()) {&#xa;            return true;&#xa;        }&#xa;&#xa;        if (f.getName().toLowerCase().endsWith(&quot;.xml&quot;)) {&#xa;            return true;&#xa;        }&#xa;        return false;&#xa;    }&#xa;&#xa;    public String getDescription() {&#xa;        String szDescription = new String(&quot;Extensible Markup Language File (*.xml)&quot;);&#xa;        return szDescription;&#xa;    }&#xa;};"/>
        <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="jFileChooser_SaveXML.addChoosableFileFilter(((FileFilter)xmlFilterS));&#xa;java.io.File saveDirectory = new File(&quot;./assets/configurations/&quot;);&#xa;jFileChooser_SaveXML.setCurrentDirectory(configDirectory);&#xa;jFileChooser_SaveXML.setDialogTitle(&quot;Save XML File&quot;);&#xa;jFileChooser_SaveXML.setSelectedFile(fileXML);"/>
      </AuxValues>
    </Component>
    <Menu class="javax.swing.JMenuBar" name="jMenuBar_MainMenu">
      <Properties>
        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
          <Border info="org.netbeans.modules.form.compat2.border.EtchedBorderInfo">
            <EtchetBorder bevelType="0"/>
          </Border>
        </Property>
      </Properties>
      <SubComponents>
        <Menu class="javax.swing.JMenu" name="jMenu_File">
          <Properties>
            <Property name="text" type="java.lang.String" value="File"/>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jMenu_File.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;        jButton_OpenActionPerformed(evt);&#xa;    }&#xa;});"/>
          </AuxValues>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="jMenuItem_LoadModel">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+M"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Load Model"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jMenuItem_LoadModel.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;        jButton_ModelActionPerformed(evt);&#xa;    }&#xa;});"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="jMenuItem_LoadTexture">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+T"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Load Texture"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jMenuItem_LoadTexture.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;        jButton_TextureActionPerformed(evt);&#xa;    }&#xa;});"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="jMenuItem_LoadXML">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+L"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Load Configuration"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jMenuItem_LoadXML.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;        jButton_OpenActionPerformed(evt);&#xa;    }&#xa;});"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="jMenuItem_SaveXML">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+S"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Save Configuration"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jMenuItem_SaveXML.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;        jButton_SaveActionPerformed(evt);&#xa;    }&#xa;});"/>
              </AuxValues>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="jMenu_Help">
          <Properties>
            <Property name="text" type="java.lang.String" value="Help"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="jMenuItem_About">
              <Properties>
                <Property name="text" type="java.lang.String" value="About"/>
              </Properties>
            </MenuItem>
          </SubComponents>
        </Menu>
      </SubComponents>
    </Menu>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="menuBar" type="java.lang.String" value="jMenuBar_MainMenu"/>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="2"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="1" attributes="0">
              <EmptySpace min="-2" pref="0" max="-2" attributes="0"/>
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" alignment="0" attributes="0">
                      <Component id="jToolBar_HotKeys_FileIO" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" max="-2" attributes="0"/>
                      <Component id="jToolBar_HotKeys_Assets" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="jToolBar_HotKeys_Animations" pref="700" max="32767" attributes="0"/>
                  </Group>
                  <Group type="102" alignment="0" attributes="0">
                      <Component id="jToolBar_HotKeys_Tools" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="jToolBar_HotKeys_Rotation" pref="779" max="32767" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                  </Group>
              </Group>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <Group type="103" groupAlignment="1" attributes="0">
                  <Group type="103" alignment="1" groupAlignment="0" max="-2" attributes="0">
                      <Component id="jToolBar_HotKeys_FileIO" alignment="0" pref="25" max="32767" attributes="1"/>
                      <Component id="jToolBar_HotKeys_Assets" alignment="0" min="-2" pref="25" max="-2" attributes="1"/>
                  </Group>
                  <Component id="jToolBar_HotKeys_Animations" min="-2" pref="25" max="-2" attributes="1"/>
              </Group>
              <EmptySpace min="-2" max="-2" attributes="0"/>
              <Group type="103" groupAlignment="1" attributes="0">
                  <Component id="jToolBar_HotKeys_Tools" min="-2" pref="25" max="-2" attributes="0"/>
                  <Component id="jToolBar_HotKeys_Rotation" min="-2" pref="25" max="-2" attributes="0"/>
              </Group>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JToolBar" name="jToolBar_HotKeys_FileIO">
      <Properties>
        <Property name="rollover" type="boolean" value="true"/>
      </Properties>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
      <SubComponents>
        <Component class="javax.swing.JButton" name="jButton_New">
          <Properties>
            <Property name="text" type="java.lang.String" value="NEW"/>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton_NewActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton_Open">
          <Properties>
            <Property name="text" type="java.lang.String" value="OPEN"/>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton_OpenActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton_Save">
          <Properties>
            <Property name="text" type="java.lang.String" value="SAVE"/>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton_SaveActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JToolBar" name="jToolBar_HotKeys_Assets">
      <Properties>
        <Property name="rollover" type="boolean" value="true"/>
      </Properties>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
      <SubComponents>
        <Component class="javax.swing.JButton" name="jButton_Model">
          <Properties>
            <Property name="text" type="java.lang.String" value="Change Model"/>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton_ModelActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton_Texture">
          <Properties>
            <Property name="text" type="java.lang.String" value="Change Texture"/>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton_TextureActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton_Reload">
          <Properties>
            <Property name="text" type="java.lang.String" value="Reload PScene"/>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton_ReloadActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JToolBar" name="jToolBar_HotKeys_Animations">
      <Properties>
        <Property name="rollover" type="boolean" value="true"/>
      </Properties>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
      <SubComponents>
        <Component class="javax.swing.JComboBox" name="jComboBox_ModelInstances">
          <Properties>
            <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
              <StringArray count="4">
                <StringItem index="0" value="Item 1"/>
                <StringItem index="1" value="Item 2"/>
                <StringItem index="2" value="Item 3"/>
                <StringItem index="3" value="Item 4"/>
              </StringArray>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jComboBox_ModelInstances.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;        resetAnimations();&#xa;        setSpeedSlider();&#xa;//        setRotationSliders();&#xa;        if(options != null)&#xa;            options.setSelectedInstance(((PPolygonModelInstance)jComboBox_ModelInstances.getSelectedItem()));&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JComboBox" name="jComboBox_AnimationsQ">
          <Properties>
            <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
              <StringArray count="4">
                <StringItem index="0" value="Item 1"/>
                <StringItem index="1" value="Item 2"/>
                <StringItem index="2" value="Item 3"/>
                <StringItem index="3" value="Item 4"/>
              </StringArray>
            </Property>
            <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[200, 25]"/>
            </Property>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[85, 20]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[150, 27]"/>
            </Property>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jComboBox_AnimationsQActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel_AnimSpeed">
          <Properties>
            <Property name="text" type="java.lang.String" value="Animation Speed"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JSlider" name="jSlider_AnimationsQ">
          <Properties>
            <Property name="maximum" type="int" value="40"/>
            <Property name="minimum" type="int" value="1"/>
            <Property name="value" type="int" value="10"/>
            <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[200, 29]"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jSlider_AnimationsQ.addChangeListener(new ChangeListener() {&#xa;&#xa;    public void stateChanged(ChangeEvent e) {&#xa;        jSlider_AnimationsQStateChanged(e);&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JToolBar" name="jToolBar_HotKeys_Rotation">
      <Properties>
        <Property name="rollover" type="boolean" value="true"/>
      </Properties>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
      <SubComponents>
        <Component class="javax.swing.JLabel" name="jLabel_RotationsQ">
          <Properties>
            <Property name="text" type="java.lang.String" value="Rotate Model"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JToolBar$Separator" name="jSeparator_Rot">
          <Properties>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[22, 1]"/>
            </Property>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel_XAxis">
          <Properties>
            <Property name="text" type="java.lang.String" value="X Axis"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JSlider" name="jSlider_XAxis">
          <Properties>
            <Property name="maximum" type="int" value="359"/>
            <Property name="minimum" type="int" value="1"/>
            <Property name="value" type="int" value="180"/>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[100, 29]"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jSlider_XAxis.addChangeListener(new ChangeListener() {&#xa;&#xa;    public void stateChanged(ChangeEvent e) {&#xa;        RotateOnAxis(0);&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JToolBar$Separator" name="jSeparator_XY">
          <Properties>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[22, 1]"/>
            </Property>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel_YAxis">
          <Properties>
            <Property name="text" type="java.lang.String" value="Y Axis"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JSlider" name="jSlider_YAxis">
          <Properties>
            <Property name="maximum" type="int" value="359"/>
            <Property name="minimum" type="int" value="1"/>
            <Property name="value" type="int" value="180"/>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[100, 29]"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jSlider_YAxis.addChangeListener(new ChangeListener() {&#xa;&#xa;    public void stateChanged(ChangeEvent e) {&#xa;        RotateOnAxis(1);&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JToolBar$Separator" name="jSeparator_YZ">
          <Properties>
            <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[22, 2147483647]"/>
            </Property>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[22, 1]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[22, 1]"/>
            </Property>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel_ZAxis">
          <Properties>
            <Property name="text" type="java.lang.String" value="Z Axis"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JSlider" name="jSlider_ZAxis">
          <Properties>
            <Property name="maximum" type="int" value="359"/>
            <Property name="minimum" type="int" value="1"/>
            <Property name="value" type="int" value="180"/>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[100, 29]"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jSlider_ZAxis.addChangeListener(new ChangeListener() {&#xa;&#xa;    public void stateChanged(ChangeEvent e) {&#xa;        RotateOnAxis(2);&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="jButton_RotationsReset">
          <Properties>
            <Property name="text" type="java.lang.String" value="Reset Axes"/>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton_RotationsResetActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JToolBar" name="jToolBar_HotKeys_Tools">
      <Properties>
        <Property name="rollover" type="boolean" value="true"/>
      </Properties>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
      <SubComponents>
        <Component class="javax.swing.JLabel" name="jLabel_Tools">
          <Properties>
            <Property name="text" type="java.lang.String" value="Tools"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JToolBar$Separator" name="jSeparator_ToolsBegin">
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel_AvatarOptions">
          <Properties>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="0" red="0" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Avatar Options"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JCheckBox" name="jCheckBox_AvatarOptions">
          <Properties>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="itemStateChanged" listener="java.awt.event.ItemListener" parameters="java.awt.event.ItemEvent" handler="jCheckBox_AvatarOptionsItemStateChanged"/>
          </Events>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel_PSceneExplorer">
          <Properties>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="0" red="0" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="PScene Explorer"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JCheckBox" name="jCheckBox_Explorer">
          <Properties>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="horizontalTextPosition" type="int" value="0"/>
            <Property name="verticalTextPosition" type="int" value="3"/>
          </Properties>
          <Events>
            <EventHandler event="itemStateChanged" listener="java.awt.event.ItemListener" parameters="java.awt.event.ItemEvent" handler="jCheckBox_ExplorerItemStateChanged"/>
          </Events>
        </Component>
        <Component class="javax.swing.JToolBar$Separator" name="jSeparator_ToolsEnd">
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
