/**
 * Project Wonderland
 *
 * Copyright (c) 2004-2008, Sun Microsystems, Inc., All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * Sun designates this particular file as subject to the "Classpath"
 * exception as provided by Sun in the License file that accompanied
 * this code.
 */

/*
 * JPanel_HeadOptions.java
 *
 * Created on Dec 17, 2008, 11:48:46 AM
 */

package imi.gui;

import javax.swing.JFrame;

/**
 *
 * @author Paul Viet Nguyen Truong (ptruong)
 */
public class JPanel_HeadOptions extends AbstractOptions {
////////////////////////////////////////////////////////////////////////////////
// CLASS DATA MEMBERS
////////////////////////////////////////////////////////////////////////////////
    private JFrame  m_baseFrame     =   null;

    /** Creates new form JPanel_HeadOptions */
    public JPanel_HeadOptions() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane_Head = new javax.swing.JTabbedPane();
        jPanel_Eyes = new javax.swing.JPanel();
        jPanel_EyeHPos = new javax.swing.JPanel();
        LeftEye_HPos = new imi.gui.JPanel_HorizontalSlider();
        RightEye_HPos = new imi.gui.JPanel_HorizontalSlider();
        jCheckBox_SyncEyeHPos = new javax.swing.JCheckBox();
        jPanel_EyeVPos = new javax.swing.JPanel();
        LeftEye_VPos = new imi.gui.JPanel_VerticalSlider();
        RightEye_VPos = new imi.gui.JPanel_VerticalSlider();
        jCheckBox_SyncEyeVPos = new javax.swing.JCheckBox();
        jPanel_EyeWidth = new javax.swing.JPanel();
        LeftEye_Width = new imi.gui.JPanel_HorizontalSlider();
        RightEye_Width = new imi.gui.JPanel_HorizontalSlider();
        jCheckBox_SyncEyeWidth = new javax.swing.JCheckBox();
        jPanel_EyeSize = new javax.swing.JPanel();
        LeftEye_Size = new imi.gui.JPanel_HorizontalSlider();
        RightEye_Size = new imi.gui.JPanel_HorizontalSlider();
        jCheckBox_SyncEyeSize = new javax.swing.JCheckBox();
        jPanel_Mouth = new javax.swing.JPanel();
        jPanel_LipSize = new javax.swing.JPanel();
        UpperLip_Size = new imi.gui.JPanel_VerticalSlider();
        LowerLip_Size = new imi.gui.JPanel_VerticalSlider();
        jCheckBox_SyncLipSize = new javax.swing.JCheckBox();
        jPanel_MouthWidth = new javax.swing.JPanel();
        Mouth_Width = new imi.gui.JPanel_HorizontalSlider();
        jPanel_Uniform = new javax.swing.JPanel();
        jPanel_HeadWidth = new javax.swing.JPanel();
        jPanel_HorizontalSlider1 = new imi.gui.JPanel_HorizontalSlider();
        jPanel_HeadHeight = new javax.swing.JPanel();
        jPanel_VerticalSlider1 = new imi.gui.JPanel_VerticalSlider();
        jPanel_HeadDepth = new javax.swing.JPanel();
        jPanel_HorizontalSlider2 = new imi.gui.JPanel_HorizontalSlider();
        jPanel_HeadUniform = new javax.swing.JPanel();
        jPanel_HorizontalSlider3 = new imi.gui.JPanel_HorizontalSlider();

        setMaximumSize(new java.awt.Dimension(270, 600));
        setMinimumSize(new java.awt.Dimension(270, 600));
        setPreferredSize(new java.awt.Dimension(270, 600));

        jTabbedPane_Head.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane_Head.setPreferredSize(new java.awt.Dimension(275, 600));

        jPanel_Eyes.setMaximumSize(new java.awt.Dimension(284, 500));
        jPanel_Eyes.setMinimumSize(new java.awt.Dimension(284, 500));
        jPanel_Eyes.setPreferredSize(new java.awt.Dimension(284, 500));
        jPanel_Eyes.setLayout(new java.awt.GridBagLayout());

        jPanel_EyeHPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye H Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeHPos.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_EyeHPos.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_EyeHPos.setLayout(new java.awt.GridBagLayout());

        LeftEye_HPos.setMinimumSize(new java.awt.Dimension(110, 57));
        LeftEye_HPos.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_EyeHPos.add(LeftEye_HPos, gridBagConstraints);

        RightEye_HPos.setMinimumSize(new java.awt.Dimension(110, 57));
        RightEye_HPos.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel_EyeHPos.add(RightEye_HPos, gridBagConstraints);

        jCheckBox_SyncEyeHPos.setText("Lock Sliders");
        jCheckBox_SyncEyeHPos.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeHPos.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_EyeHPos.add(jCheckBox_SyncEyeHPos, gridBagConstraints);

        jPanel_Eyes.add(jPanel_EyeHPos, new java.awt.GridBagConstraints());

        jPanel_EyeVPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye V Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeVPos.setMinimumSize(new java.awt.Dimension(230, 207));
        jPanel_EyeVPos.setPreferredSize(new java.awt.Dimension(230, 230));
        jPanel_EyeVPos.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_EyeVPos.add(LeftEye_VPos, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel_EyeVPos.add(RightEye_VPos, gridBagConstraints);

        jCheckBox_SyncEyeVPos.setText("Lock Sliders");
        jCheckBox_SyncEyeVPos.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeVPos.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel_EyeVPos.add(jCheckBox_SyncEyeVPos, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Eyes.add(jPanel_EyeVPos, gridBagConstraints);

        jPanel_EyeWidth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye Width", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeWidth.setMinimumSize(new java.awt.Dimension(230, 112));
        jPanel_EyeWidth.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_EyeWidth.setLayout(new java.awt.GridBagLayout());

        LeftEye_Width.setMinimumSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel_EyeWidth.add(LeftEye_Width, gridBagConstraints);

        RightEye_Width.setMinimumSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel_EyeWidth.add(RightEye_Width, gridBagConstraints);

        jCheckBox_SyncEyeWidth.setText("Lock Sliders");
        jCheckBox_SyncEyeWidth.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeWidth.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_EyeWidth.add(jCheckBox_SyncEyeWidth, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel_Eyes.add(jPanel_EyeWidth, gridBagConstraints);

        jPanel_EyeSize.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeSize.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_EyeSize.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_EyeSize.setLayout(new java.awt.GridBagLayout());

        LeftEye_Size.setMinimumSize(new java.awt.Dimension(110, 57));
        LeftEye_Size.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel_EyeSize.add(LeftEye_Size, gridBagConstraints);

        RightEye_Size.setMinimumSize(new java.awt.Dimension(110, 57));
        RightEye_Size.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel_EyeSize.add(RightEye_Size, gridBagConstraints);

        jCheckBox_SyncEyeSize.setText("Lock Sliders");
        jCheckBox_SyncEyeSize.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeSize.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_EyeSize.add(jCheckBox_SyncEyeSize, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel_Eyes.add(jPanel_EyeSize, gridBagConstraints);

        jTabbedPane_Head.addTab("Eyes", jPanel_Eyes);

        jPanel_Mouth.setLayout(new java.awt.GridBagLayout());

        jPanel_LipSize.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Upper & Lower Lip Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_LipSize.setMinimumSize(new java.awt.Dimension(230, 230));
        jPanel_LipSize.setPreferredSize(new java.awt.Dimension(230, 230));
        jPanel_LipSize.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_LipSize.add(UpperLip_Size, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel_LipSize.add(LowerLip_Size, gridBagConstraints);

        jCheckBox_SyncLipSize.setText("Lock Sliders");
        jCheckBox_SyncLipSize.setMaximumSize(new java.awt.Dimension(120, 23));
        jCheckBox_SyncLipSize.setMinimumSize(new java.awt.Dimension(120, 23));
        jCheckBox_SyncLipSize.setPreferredSize(new java.awt.Dimension(120, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_LipSize.add(jCheckBox_SyncLipSize, gridBagConstraints);

        jPanel_Mouth.add(jPanel_LipSize, new java.awt.GridBagConstraints());

        jPanel_MouthWidth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mouth Width", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_MouthWidth.setMinimumSize(new java.awt.Dimension(230, 230));
        jPanel_MouthWidth.setPreferredSize(new java.awt.Dimension(230, 230));
        jPanel_MouthWidth.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_MouthWidth.add(Mouth_Width, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Mouth.add(jPanel_MouthWidth, gridBagConstraints);

        jTabbedPane_Head.addTab("Mouth", jPanel_Mouth);

        jPanel_Uniform.setLayout(new java.awt.GridBagLayout());

        jPanel_HeadWidth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Head Width Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadWidth.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_HeadWidth.setPreferredSize(new java.awt.Dimension(230, 120));

        org.jdesktop.layout.GroupLayout jPanel_HeadWidthLayout = new org.jdesktop.layout.GroupLayout(jPanel_HeadWidth);
        jPanel_HeadWidth.setLayout(jPanel_HeadWidthLayout);
        jPanel_HeadWidthLayout.setHorizontalGroup(
            jPanel_HeadWidthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 218, Short.MAX_VALUE)
            .add(jPanel_HeadWidthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadWidthLayout.createSequentialGroup()
                    .add(0, 49, Short.MAX_VALUE)
                    .add(jPanel_HorizontalSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 49, Short.MAX_VALUE)))
        );
        jPanel_HeadWidthLayout.setVerticalGroup(
            jPanel_HeadWidthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 92, Short.MAX_VALUE)
            .add(jPanel_HeadWidthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadWidthLayout.createSequentialGroup()
                    .add(0, 17, Short.MAX_VALUE)
                    .add(jPanel_HorizontalSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 18, Short.MAX_VALUE)))
        );

        jPanel_Uniform.add(jPanel_HeadWidth, new java.awt.GridBagConstraints());

        jPanel_HeadHeight.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Head Height Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadHeight.setMinimumSize(new java.awt.Dimension(230, 200));
        jPanel_HeadHeight.setPreferredSize(new java.awt.Dimension(230, 120));

        org.jdesktop.layout.GroupLayout jPanel_HeadHeightLayout = new org.jdesktop.layout.GroupLayout(jPanel_HeadHeight);
        jPanel_HeadHeight.setLayout(jPanel_HeadHeightLayout);
        jPanel_HeadHeightLayout.setHorizontalGroup(
            jPanel_HeadHeightLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 218, Short.MAX_VALUE)
            .add(jPanel_HeadHeightLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadHeightLayout.createSequentialGroup()
                    .add(0, 84, Short.MAX_VALUE)
                    .add(jPanel_VerticalSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 84, Short.MAX_VALUE)))
        );
        jPanel_HeadHeightLayout.setVerticalGroup(
            jPanel_HeadHeightLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 172, Short.MAX_VALUE)
            .add(jPanel_HeadHeightLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadHeightLayout.createSequentialGroup()
                    .add(0, 12, Short.MAX_VALUE)
                    .add(jPanel_VerticalSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 12, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Uniform.add(jPanel_HeadHeight, gridBagConstraints);

        jPanel_HeadDepth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Head Depth Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadDepth.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_HeadDepth.setPreferredSize(new java.awt.Dimension(230, 120));

        org.jdesktop.layout.GroupLayout jPanel_HeadDepthLayout = new org.jdesktop.layout.GroupLayout(jPanel_HeadDepth);
        jPanel_HeadDepth.setLayout(jPanel_HeadDepthLayout);
        jPanel_HeadDepthLayout.setHorizontalGroup(
            jPanel_HeadDepthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 218, Short.MAX_VALUE)
            .add(jPanel_HeadDepthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadDepthLayout.createSequentialGroup()
                    .add(0, 49, Short.MAX_VALUE)
                    .add(jPanel_HorizontalSlider2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 49, Short.MAX_VALUE)))
        );
        jPanel_HeadDepthLayout.setVerticalGroup(
            jPanel_HeadDepthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 92, Short.MAX_VALUE)
            .add(jPanel_HeadDepthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadDepthLayout.createSequentialGroup()
                    .add(0, 17, Short.MAX_VALUE)
                    .add(jPanel_HorizontalSlider2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 18, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel_Uniform.add(jPanel_HeadDepth, gridBagConstraints);

        jPanel_HeadUniform.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Uniform Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadUniform.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_HeadUniform.setPreferredSize(new java.awt.Dimension(230, 120));

        org.jdesktop.layout.GroupLayout jPanel_HeadUniformLayout = new org.jdesktop.layout.GroupLayout(jPanel_HeadUniform);
        jPanel_HeadUniform.setLayout(jPanel_HeadUniformLayout);
        jPanel_HeadUniformLayout.setHorizontalGroup(
            jPanel_HeadUniformLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 218, Short.MAX_VALUE)
            .add(jPanel_HeadUniformLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadUniformLayout.createSequentialGroup()
                    .add(0, 49, Short.MAX_VALUE)
                    .add(jPanel_HorizontalSlider3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 49, Short.MAX_VALUE)))
        );
        jPanel_HeadUniformLayout.setVerticalGroup(
            jPanel_HeadUniformLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 92, Short.MAX_VALUE)
            .add(jPanel_HeadUniformLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_HeadUniformLayout.createSequentialGroup()
                    .add(0, 17, Short.MAX_VALUE)
                    .add(jPanel_HorizontalSlider3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 18, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel_Uniform.add(jPanel_HeadUniform, gridBagConstraints);

        jTabbedPane_Head.addTab("Uniform", jPanel_Uniform);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane_Head, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 275, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane_Head, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private imi.gui.JPanel_HorizontalSlider LeftEye_HPos;
    private imi.gui.JPanel_HorizontalSlider LeftEye_Size;
    private imi.gui.JPanel_VerticalSlider LeftEye_VPos;
    private imi.gui.JPanel_HorizontalSlider LeftEye_Width;
    private imi.gui.JPanel_VerticalSlider LowerLip_Size;
    private imi.gui.JPanel_HorizontalSlider Mouth_Width;
    private imi.gui.JPanel_HorizontalSlider RightEye_HPos;
    private imi.gui.JPanel_HorizontalSlider RightEye_Size;
    private imi.gui.JPanel_VerticalSlider RightEye_VPos;
    private imi.gui.JPanel_HorizontalSlider RightEye_Width;
    private imi.gui.JPanel_VerticalSlider UpperLip_Size;
    private javax.swing.JCheckBox jCheckBox_SyncEyeHPos;
    private javax.swing.JCheckBox jCheckBox_SyncEyeSize;
    private javax.swing.JCheckBox jCheckBox_SyncEyeVPos;
    private javax.swing.JCheckBox jCheckBox_SyncEyeWidth;
    private javax.swing.JCheckBox jCheckBox_SyncLipSize;
    private javax.swing.JPanel jPanel_EyeHPos;
    private javax.swing.JPanel jPanel_EyeSize;
    private javax.swing.JPanel jPanel_EyeVPos;
    private javax.swing.JPanel jPanel_EyeWidth;
    private javax.swing.JPanel jPanel_Eyes;
    private javax.swing.JPanel jPanel_HeadDepth;
    private javax.swing.JPanel jPanel_HeadHeight;
    private javax.swing.JPanel jPanel_HeadUniform;
    private javax.swing.JPanel jPanel_HeadWidth;
    private imi.gui.JPanel_HorizontalSlider jPanel_HorizontalSlider1;
    private imi.gui.JPanel_HorizontalSlider jPanel_HorizontalSlider2;
    private imi.gui.JPanel_HorizontalSlider jPanel_HorizontalSlider3;
    private javax.swing.JPanel jPanel_LipSize;
    private javax.swing.JPanel jPanel_Mouth;
    private javax.swing.JPanel jPanel_MouthWidth;
    private javax.swing.JPanel jPanel_Uniform;
    private imi.gui.JPanel_VerticalSlider jPanel_VerticalSlider1;
    private javax.swing.JTabbedPane jTabbedPane_Head;
    // End of variables declaration//GEN-END:variables

////////////////////////////////////////////////////////////////////////////////
// HELPER FUNCTIONS
////////////////////////////////////////////////////////////////////////////////

    public void setParentFrame(JFrame frame) {
        m_baseFrame = frame;
    }

    @Override
    public void notifyParent() {

    }
}
