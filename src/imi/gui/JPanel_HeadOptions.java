/**
 * Project Wonderland
 *
 * Copyright (c) 2004-2008, Sun Microsystems, Inc., All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * Sun designates this particular file as subject to the "Classpath"
 * exception as provided by Sun in the License file that accompanied
 * this code.
 */

/*
 * JPanel_HeadOptions.java
 *
 * Created on Dec 17, 2008, 11:48:46 AM
 */

package imi.gui;

import javax.swing.JFrame;

/**
 *
 * @author Paul Viet Nguyen Truong (ptruong)
 */
public class JPanel_HeadOptions extends javax.swing.JPanel {
////////////////////////////////////////////////////////////////////////////////
// CLASS DATA MEMBERS
////////////////////////////////////////////////////////////////////////////////
    private JFrame  m_baseFrame     =   null;

////////////////////////////////////////////////////////////////////////////////
// CLASS METHODS
////////////////////////////////////////////////////////////////////////////////
    /**
     * Default constructor initializes the GUI components.  Before frame is usable
     * the parent frame needs to be set and the sliders need to be associated with
     * the joint/grouping it controls.
     */
    public JPanel_HeadOptions() {
        initComponents();
    }

    /**
     * Overloaded constructor initializes the GUI components and sets the parent
     * frame and the slider associations
     * @param baseFrame
     */
    public JPanel_HeadOptions(JFrame baseFrame) {
        m_baseFrame = baseFrame;
        initComponents();
        setSliderControls();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane_Head = new javax.swing.JTabbedPane();
        jPanel_Eyes = new javax.swing.JPanel();
        jPanel_EyeHPos = new javax.swing.JPanel();
        jCheckBox_SyncEyeHPos = new javax.swing.JCheckBox();
        LeftEye_HPos = new imi.gui.JPanel_HorizontalSliderT();
        RightEye_HPos = new imi.gui.JPanel_HorizontalSliderT();
        jPanel_EyeVPos = new javax.swing.JPanel();
        jCheckBox_SyncEyeVPos = new javax.swing.JCheckBox();
        LeftEye_VPos = new imi.gui.JPanel_VerticalSliderT();
        RightEye_VPos = new imi.gui.JPanel_VerticalSliderT();
        jPanel_EyeWidth = new javax.swing.JPanel();
        jCheckBox_SyncEyeWidth = new javax.swing.JCheckBox();
        LeftEye_Width = new imi.gui.JPanel_HorizontalSliderS();
        RightEye_Width = new imi.gui.JPanel_HorizontalSliderS();
        jPanel_EyeSize = new javax.swing.JPanel();
        jCheckBox_SyncEyeSize = new javax.swing.JCheckBox();
        LeftEye_Size = new imi.gui.JPanel_HorizontalSliderS();
        RightEye_Size = new imi.gui.JPanel_HorizontalSliderS();
        jPanel_Nose = new javax.swing.JPanel();
        jPanel_NoseVPos = new javax.swing.JPanel();
        NoseVPos = new imi.gui.JPanel_VerticalSliderT();
        jPanel_NoseHPos = new javax.swing.JPanel();
        NoseHPos = new imi.gui.JPanel_HorizontalSliderT();
        jPanel_NoseLength = new javax.swing.JPanel();
        NoseLength = new imi.gui.JPanel_VerticalSliderS();
        jPanel_NoseSize = new javax.swing.JPanel();
        NoseSize = new imi.gui.JPanel_HorizontalSliderS();
        jPanel_Mouth = new javax.swing.JPanel();
        jPanel_LipSize = new javax.swing.JPanel();
        jCheckBox_SyncLipSize = new javax.swing.JCheckBox();
        UpperLip_Size = new imi.gui.JPanel_HorizontalSliderS();
        LowerLip_Size = new imi.gui.JPanel_HorizontalSliderS();
        jPanel_MouthWidth = new javax.swing.JPanel();
        Mouth_Width = new imi.gui.JPanel_HorizontalSliderT();
        jPanel_Ears = new javax.swing.JPanel();
        jPanel_EarVPos = new javax.swing.JPanel();
        LeftEarVPos = new imi.gui.JPanel_VerticalSliderT();
        RightEarVPos = new imi.gui.JPanel_VerticalSliderT();
        jPanel_EarHPos = new javax.swing.JPanel();
        LeftEarHPos = new imi.gui.JPanel_HorizontalSliderT();
        RightEarHPos = new imi.gui.JPanel_HorizontalSliderT();
        jPanel_EarSize = new javax.swing.JPanel();
        LeftEarSize = new imi.gui.JPanel_HorizontalSliderS();
        RightEarSize = new imi.gui.JPanel_HorizontalSliderS();
        jPanel_Uniform = new javax.swing.JPanel();
        jPanel_HeadWidth = new javax.swing.JPanel();
        Head_Width = new imi.gui.JPanel_HorizontalSliderS();
        jPanel_HeadHeight = new javax.swing.JPanel();
        Head_Height = new imi.gui.JPanel_VerticalSliderS();
        jPanel_HeadDepth = new javax.swing.JPanel();
        Head_Depth = new imi.gui.JPanel_HorizontalSliderS();
        jPanel_HeadUniform = new javax.swing.JPanel();
        jPanel_HorizontalSliderS1 = new imi.gui.JPanel_HorizontalSliderS();

        setMaximumSize(new java.awt.Dimension(270, 600));
        setMinimumSize(new java.awt.Dimension(270, 600));
        setPreferredSize(new java.awt.Dimension(270, 600));

        jTabbedPane_Head.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane_Head.setPreferredSize(new java.awt.Dimension(275, 600));

        jPanel_Eyes.setMaximumSize(new java.awt.Dimension(284, 500));
        jPanel_Eyes.setMinimumSize(new java.awt.Dimension(284, 500));
        jPanel_Eyes.setPreferredSize(new java.awt.Dimension(284, 500));
        jPanel_Eyes.setLayout(new java.awt.GridBagLayout());

        jPanel_EyeHPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye H Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeHPos.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_EyeHPos.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_EyeHPos.setLayout(new java.awt.GridBagLayout());

        jCheckBox_SyncEyeHPos.setText("Lock Sliders");
        jCheckBox_SyncEyeHPos.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeHPos.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_EyeHPos.add(jCheckBox_SyncEyeHPos, gridBagConstraints);

        LeftEye_HPos.setMinimumSize(new java.awt.Dimension(110, 57));
        LeftEye_HPos.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_EyeHPos.add(LeftEye_HPos, gridBagConstraints);

        RightEye_HPos.setMinimumSize(new java.awt.Dimension(110, 57));
        RightEye_HPos.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel_EyeHPos.add(RightEye_HPos, gridBagConstraints);

        jPanel_Eyes.add(jPanel_EyeHPos, new java.awt.GridBagConstraints());

        jPanel_EyeVPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye V Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeVPos.setMinimumSize(new java.awt.Dimension(230, 207));
        jPanel_EyeVPos.setPreferredSize(new java.awt.Dimension(230, 230));
        jPanel_EyeVPos.setLayout(new java.awt.GridBagLayout());

        jCheckBox_SyncEyeVPos.setText("Lock Sliders");
        jCheckBox_SyncEyeVPos.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeVPos.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_EyeVPos.add(jCheckBox_SyncEyeVPos, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_EyeVPos.add(LeftEye_VPos, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel_EyeVPos.add(RightEye_VPos, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Eyes.add(jPanel_EyeVPos, gridBagConstraints);

        jPanel_EyeWidth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye Width", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeWidth.setMinimumSize(new java.awt.Dimension(230, 112));
        jPanel_EyeWidth.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_EyeWidth.setLayout(new java.awt.GridBagLayout());

        jCheckBox_SyncEyeWidth.setText("Lock Sliders");
        jCheckBox_SyncEyeWidth.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeWidth.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_EyeWidth.add(jCheckBox_SyncEyeWidth, gridBagConstraints);

        LeftEye_Width.setMinimumSize(new java.awt.Dimension(110, 57));
        LeftEye_Width.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_EyeWidth.add(LeftEye_Width, gridBagConstraints);

        RightEye_Width.setMinimumSize(new java.awt.Dimension(110, 57));
        RightEye_Width.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel_EyeWidth.add(RightEye_Width, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel_Eyes.add(jPanel_EyeWidth, gridBagConstraints);

        jPanel_EyeSize.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Eye Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EyeSize.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_EyeSize.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_EyeSize.setLayout(new java.awt.GridBagLayout());

        jCheckBox_SyncEyeSize.setText("Lock Sliders");
        jCheckBox_SyncEyeSize.setMinimumSize(new java.awt.Dimension(120, 25));
        jCheckBox_SyncEyeSize.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_EyeSize.add(jCheckBox_SyncEyeSize, gridBagConstraints);

        LeftEye_Size.setMinimumSize(new java.awt.Dimension(110, 57));
        LeftEye_Size.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_EyeSize.add(LeftEye_Size, gridBagConstraints);

        RightEye_Size.setMinimumSize(new java.awt.Dimension(110, 57));
        RightEye_Size.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel_EyeSize.add(RightEye_Size, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel_Eyes.add(jPanel_EyeSize, gridBagConstraints);

        jTabbedPane_Head.addTab("Eyes", jPanel_Eyes);

        jPanel_Nose.setLayout(new java.awt.GridBagLayout());

        jPanel_NoseVPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nose Vertical Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_NoseVPos.setMinimumSize(new java.awt.Dimension(230, 180));
        jPanel_NoseVPos.setPreferredSize(new java.awt.Dimension(230, 180));
        jPanel_NoseVPos.setLayout(new java.awt.GridBagLayout());
        jPanel_NoseVPos.add(NoseVPos, new java.awt.GridBagConstraints());

        jPanel_Nose.add(jPanel_NoseVPos, new java.awt.GridBagConstraints());

        jPanel_NoseHPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nose Horizontal Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_NoseHPos.setMinimumSize(new java.awt.Dimension(230, 115));
        jPanel_NoseHPos.setPreferredSize(new java.awt.Dimension(230, 115));
        jPanel_NoseHPos.setLayout(new java.awt.GridBagLayout());
        jPanel_NoseHPos.add(NoseHPos, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Nose.add(jPanel_NoseHPos, gridBagConstraints);

        jPanel_NoseLength.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nose Length", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_NoseLength.setMinimumSize(new java.awt.Dimension(230, 180));
        jPanel_NoseLength.setPreferredSize(new java.awt.Dimension(230, 180));
        jPanel_NoseLength.setLayout(new java.awt.GridBagLayout());
        jPanel_NoseLength.add(NoseLength, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel_Nose.add(jPanel_NoseLength, gridBagConstraints);

        jPanel_NoseSize.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nose Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_NoseSize.setMinimumSize(new java.awt.Dimension(230, 115));
        jPanel_NoseSize.setPreferredSize(new java.awt.Dimension(230, 115));
        jPanel_NoseSize.setLayout(new java.awt.GridBagLayout());
        jPanel_NoseSize.add(NoseSize, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel_Nose.add(jPanel_NoseSize, gridBagConstraints);

        jTabbedPane_Head.addTab("Nose", jPanel_Nose);

        jPanel_Mouth.setLayout(new java.awt.GridBagLayout());

        jPanel_LipSize.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Upper & Lower Lip Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_LipSize.setMinimumSize(new java.awt.Dimension(230, 230));
        jPanel_LipSize.setPreferredSize(new java.awt.Dimension(230, 230));
        jPanel_LipSize.setLayout(new java.awt.GridBagLayout());

        jCheckBox_SyncLipSize.setText("Lock Sliders");
        jCheckBox_SyncLipSize.setMaximumSize(new java.awt.Dimension(120, 23));
        jCheckBox_SyncLipSize.setMinimumSize(new java.awt.Dimension(120, 23));
        jCheckBox_SyncLipSize.setPreferredSize(new java.awt.Dimension(120, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel_LipSize.add(jCheckBox_SyncLipSize, gridBagConstraints);

        UpperLip_Size.setMinimumSize(new java.awt.Dimension(110, 57));
        UpperLip_Size.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_LipSize.add(UpperLip_Size, gridBagConstraints);

        LowerLip_Size.setMinimumSize(new java.awt.Dimension(110, 57));
        LowerLip_Size.setPreferredSize(new java.awt.Dimension(110, 57));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel_LipSize.add(LowerLip_Size, gridBagConstraints);

        jPanel_Mouth.add(jPanel_LipSize, new java.awt.GridBagConstraints());

        jPanel_MouthWidth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mouth Width", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_MouthWidth.setMinimumSize(new java.awt.Dimension(230, 230));
        jPanel_MouthWidth.setPreferredSize(new java.awt.Dimension(230, 230));
        jPanel_MouthWidth.setLayout(new java.awt.GridBagLayout());
        jPanel_MouthWidth.add(Mouth_Width, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Mouth.add(jPanel_MouthWidth, gridBagConstraints);

        jTabbedPane_Head.addTab("Mouth", jPanel_Mouth);

        jPanel_Ears.setLayout(new java.awt.GridBagLayout());

        jPanel_EarVPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Ear Vertical Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EarVPos.setMinimumSize(new java.awt.Dimension(230, 200));
        jPanel_EarVPos.setPreferredSize(new java.awt.Dimension(230, 200));
        jPanel_EarVPos.setLayout(new java.awt.GridBagLayout());
        jPanel_EarVPos.add(LeftEarVPos, new java.awt.GridBagConstraints());
        jPanel_EarVPos.add(RightEarVPos, new java.awt.GridBagConstraints());

        jPanel_Ears.add(jPanel_EarVPos, new java.awt.GridBagConstraints());

        jPanel_EarHPos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Ear Spacing", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EarHPos.setMinimumSize(new java.awt.Dimension(230, 180));
        jPanel_EarHPos.setOpaque(false);
        jPanel_EarHPos.setPreferredSize(new java.awt.Dimension(230, 180));
        jPanel_EarHPos.setLayout(new java.awt.GridBagLayout());

        LeftEarHPos.setMinimumSize(new java.awt.Dimension(110, 57));
        LeftEarHPos.setPreferredSize(new java.awt.Dimension(110, 57));
        jPanel_EarHPos.add(LeftEarHPos, new java.awt.GridBagConstraints());

        RightEarHPos.setMinimumSize(new java.awt.Dimension(110, 57));
        RightEarHPos.setPreferredSize(new java.awt.Dimension(110, 57));
        jPanel_EarHPos.add(RightEarHPos, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Ears.add(jPanel_EarHPos, gridBagConstraints);

        jPanel_EarSize.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left & Right Ear Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_EarSize.setMinimumSize(new java.awt.Dimension(230, 180));
        jPanel_EarSize.setOpaque(false);
        jPanel_EarSize.setPreferredSize(new java.awt.Dimension(230, 180));
        jPanel_EarSize.setLayout(new java.awt.GridBagLayout());

        LeftEarSize.setMaximumSize(new java.awt.Dimension(110, 57));
        LeftEarSize.setMinimumSize(new java.awt.Dimension(110, 57));
        LeftEarSize.setPreferredSize(new java.awt.Dimension(110, 57));
        jPanel_EarSize.add(LeftEarSize, new java.awt.GridBagConstraints());

        RightEarSize.setMaximumSize(new java.awt.Dimension(110, 57));
        RightEarSize.setMinimumSize(new java.awt.Dimension(110, 57));
        RightEarSize.setPreferredSize(new java.awt.Dimension(110, 57));
        jPanel_EarSize.add(RightEarSize, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel_Ears.add(jPanel_EarSize, gridBagConstraints);

        jTabbedPane_Head.addTab("Ears", jPanel_Ears);

        jPanel_Uniform.setLayout(new java.awt.GridBagLayout());

        jPanel_HeadWidth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Head Width Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadWidth.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_HeadWidth.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_HeadWidth.setLayout(new java.awt.GridBagLayout());
        jPanel_HeadWidth.add(Head_Width, new java.awt.GridBagConstraints());

        jPanel_Uniform.add(jPanel_HeadWidth, new java.awt.GridBagConstraints());

        jPanel_HeadHeight.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Head Height Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadHeight.setMinimumSize(new java.awt.Dimension(230, 200));
        jPanel_HeadHeight.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_HeadHeight.setLayout(new java.awt.GridBagLayout());
        jPanel_HeadHeight.add(Head_Height, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel_Uniform.add(jPanel_HeadHeight, gridBagConstraints);

        jPanel_HeadDepth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Head Depth Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadDepth.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_HeadDepth.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_HeadDepth.setLayout(new java.awt.GridBagLayout());
        jPanel_HeadDepth.add(Head_Depth, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel_Uniform.add(jPanel_HeadDepth, gridBagConstraints);

        jPanel_HeadUniform.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Uniform Scale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel_HeadUniform.setMinimumSize(new java.awt.Dimension(230, 120));
        jPanel_HeadUniform.setPreferredSize(new java.awt.Dimension(230, 120));
        jPanel_HeadUniform.setLayout(new java.awt.GridBagLayout());
        jPanel_HeadUniform.add(jPanel_HorizontalSliderS1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel_Uniform.add(jPanel_HeadUniform, gridBagConstraints);

        jTabbedPane_Head.addTab("Uniform", jPanel_Uniform);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane_Head, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 275, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane_Head, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

////////////////////////////////////////////////////////////////////////////////
// MUTATORS
////////////////////////////////////////////////////////////////////////////////

    public void setParentFrame(JFrame frame) {
        m_baseFrame = frame;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private imi.gui.JPanel_HorizontalSliderS Head_Depth;
    private imi.gui.JPanel_VerticalSliderS Head_Height;
    private imi.gui.JPanel_HorizontalSliderS Head_Width;
    private imi.gui.JPanel_HorizontalSliderT LeftEarHPos;
    private imi.gui.JPanel_HorizontalSliderS LeftEarSize;
    private imi.gui.JPanel_VerticalSliderT LeftEarVPos;
    private imi.gui.JPanel_HorizontalSliderT LeftEye_HPos;
    private imi.gui.JPanel_HorizontalSliderS LeftEye_Size;
    private imi.gui.JPanel_VerticalSliderT LeftEye_VPos;
    private imi.gui.JPanel_HorizontalSliderS LeftEye_Width;
    private imi.gui.JPanel_HorizontalSliderS LowerLip_Size;
    private imi.gui.JPanel_HorizontalSliderT Mouth_Width;
    private imi.gui.JPanel_HorizontalSliderT NoseHPos;
    private imi.gui.JPanel_VerticalSliderS NoseLength;
    private imi.gui.JPanel_HorizontalSliderS NoseSize;
    private imi.gui.JPanel_VerticalSliderT NoseVPos;
    private imi.gui.JPanel_HorizontalSliderT RightEarHPos;
    private imi.gui.JPanel_HorizontalSliderS RightEarSize;
    private imi.gui.JPanel_VerticalSliderT RightEarVPos;
    private imi.gui.JPanel_HorizontalSliderT RightEye_HPos;
    private imi.gui.JPanel_HorizontalSliderS RightEye_Size;
    private imi.gui.JPanel_VerticalSliderT RightEye_VPos;
    private imi.gui.JPanel_HorizontalSliderS RightEye_Width;
    private imi.gui.JPanel_HorizontalSliderS UpperLip_Size;
    private javax.swing.JCheckBox jCheckBox_SyncEyeHPos;
    private javax.swing.JCheckBox jCheckBox_SyncEyeSize;
    private javax.swing.JCheckBox jCheckBox_SyncEyeVPos;
    private javax.swing.JCheckBox jCheckBox_SyncEyeWidth;
    private javax.swing.JCheckBox jCheckBox_SyncLipSize;
    private javax.swing.JPanel jPanel_EarHPos;
    private javax.swing.JPanel jPanel_EarSize;
    private javax.swing.JPanel jPanel_EarVPos;
    private javax.swing.JPanel jPanel_Ears;
    private javax.swing.JPanel jPanel_EyeHPos;
    private javax.swing.JPanel jPanel_EyeSize;
    private javax.swing.JPanel jPanel_EyeVPos;
    private javax.swing.JPanel jPanel_EyeWidth;
    private javax.swing.JPanel jPanel_Eyes;
    private javax.swing.JPanel jPanel_HeadDepth;
    private javax.swing.JPanel jPanel_HeadHeight;
    private javax.swing.JPanel jPanel_HeadUniform;
    private javax.swing.JPanel jPanel_HeadWidth;
    private imi.gui.JPanel_HorizontalSliderS jPanel_HorizontalSliderS1;
    private javax.swing.JPanel jPanel_LipSize;
    private javax.swing.JPanel jPanel_Mouth;
    private javax.swing.JPanel jPanel_MouthWidth;
    private javax.swing.JPanel jPanel_Nose;
    private javax.swing.JPanel jPanel_NoseHPos;
    private javax.swing.JPanel jPanel_NoseLength;
    private javax.swing.JPanel jPanel_NoseSize;
    private javax.swing.JPanel jPanel_NoseVPos;
    private javax.swing.JPanel jPanel_Uniform;
    private javax.swing.JTabbedPane jTabbedPane_Head;
    // End of variables declaration//GEN-END:variables

////////////////////////////////////////////////////////////////////////////////
// HELPER FUNCTIONS
////////////////////////////////////////////////////////////////////////////////

    /**
     * Sets the slider's joint associations and parent windows.  The associations
     * specify which joints the slider controls.  The parent window allows the slider
     * data to be sent to the switchboard found in the base window.
     */
    public void setSliderControls() {
        Head_Depth.setObjectRef(GUI_Enums.m_sliderControl.headDepth);
        Head_Height.setObjectRef(GUI_Enums.m_sliderControl.headHeight);
        Head_Width.setObjectRef(GUI_Enums.m_sliderControl.headWidth);
        LeftEye_HPos.setObjectRef(GUI_Enums.m_sliderControl.lefteyeHPos);
        LeftEye_Size.setObjectRef(GUI_Enums.m_sliderControl.lefteyeSize);
        LeftEye_VPos.setObjectRef(GUI_Enums.m_sliderControl.lefteyeVPos);
        LeftEye_Width.setObjectRef(GUI_Enums.m_sliderControl.lefteyeWidth);
        LowerLip_Size.setObjectRef(GUI_Enums.m_sliderControl.lowerlipSize);
        Mouth_Width.setObjectRef(GUI_Enums.m_sliderControl.mouthWidth);
        RightEye_HPos.setObjectRef(GUI_Enums.m_sliderControl.righteyeHPos);
        RightEye_Size.setObjectRef(GUI_Enums.m_sliderControl.righteyeSize);
        RightEye_VPos.setObjectRef(GUI_Enums.m_sliderControl.righteyeVPos);
        RightEye_Width.setObjectRef(GUI_Enums.m_sliderControl.righteyeWidth);
        UpperLip_Size.setObjectRef(GUI_Enums.m_sliderControl.upperlipSize);
        LeftEarHPos.setObjectRef(GUI_Enums.m_sliderControl.leftearHPos);
        LeftEarSize.setObjectRef(GUI_Enums.m_sliderControl.leftearSize);
        LeftEarVPos.setObjectRef(GUI_Enums.m_sliderControl.leftearVPos);
        NoseHPos.setObjectRef(GUI_Enums.m_sliderControl.noseHPos);
        NoseLength.setObjectRef(GUI_Enums.m_sliderControl.noseLength);
        NoseSize.setObjectRef(GUI_Enums.m_sliderControl.noseSize);
        NoseVPos.setObjectRef(GUI_Enums.m_sliderControl.noseVPos);
        RightEarHPos.setObjectRef(GUI_Enums.m_sliderControl.rightearHPos);
        RightEarSize.setObjectRef(GUI_Enums.m_sliderControl.rightearSize);
        RightEarVPos.setObjectRef(GUI_Enums.m_sliderControl.rightearVPos);

        Head_Depth.setParentFrame(m_baseFrame);
        Head_Height.setParentFrame(m_baseFrame);
        Head_Width.setParentFrame(m_baseFrame);
        LeftEye_HPos.setParentFrame(m_baseFrame);
        LeftEye_Size.setParentFrame(m_baseFrame);
        LeftEye_VPos.setParentFrame(m_baseFrame);
        LeftEye_Width.setParentFrame(m_baseFrame);
        LowerLip_Size.setParentFrame(m_baseFrame);
        Mouth_Width.setParentFrame(m_baseFrame);
        RightEye_HPos.setParentFrame(m_baseFrame);
        RightEye_Size.setParentFrame(m_baseFrame);
        RightEye_VPos.setParentFrame(m_baseFrame);
        RightEye_Width.setParentFrame(m_baseFrame);
        UpperLip_Size.setParentFrame(m_baseFrame);
        LeftEarHPos.setParentFrame(m_baseFrame);
        LeftEarSize.setParentFrame(m_baseFrame);
        LeftEarVPos.setParentFrame(m_baseFrame);
        NoseHPos.setParentFrame(m_baseFrame);
        NoseLength.setParentFrame(m_baseFrame);
        NoseSize.setParentFrame(m_baseFrame);
        NoseVPos.setParentFrame(m_baseFrame);
        RightEarHPos.setParentFrame(m_baseFrame);
        RightEarSize.setParentFrame(m_baseFrame);
        RightEarVPos.setParentFrame(m_baseFrame);
    }
}
